{
  // Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "cout1": {
    "prefix": "pr",
    "body": "std::cout << $1 << std::endl;",
    "description": "Print line to the console"
  },
  "cout2": {
    "prefix": "ps",
    "body": "std::cout << \"$1\" << std::endl;"
  },
  "struct": {
    "prefix": "st",
    "body": [
      "struct $TM_FILENAME_BASE {",
      "  $0",
      "};"
    ]
  },
  "class": {
    "prefix": "cl",
    "body": [
      "class ${1:$TM_FILENAME_BASE} ${2::Base}{",
      "private:",
      "  $0",
      "protected:",
      "",
      "public:",
      "",
      "};"
    ]
  },
  "for-loop (int)": {
    "prefix": "fori",
    "body": [
      "for (int ${1:i}{}; $1 < ${2:size}; ++$1) {",
      "  $0",
      "}"
    ]
  },
  "for-each loop": {
    "prefix": "fore",
    "body": [
      "for (auto &${1:el} : ${2:container} {",
      "  $0",
      "}"
    ]
  },
  "Print endl": {
    "prefix": "pl",
    "body": "std::cout << std::endl;"
  },
  "Randomize": {
    "prefix": "sr",
    "body": "std::srand(static_cast<unsigned>(std::time(nullptr)));",
    "description": "null random seed"
  },
  "Init": {
    "prefix": "cpp",
    "body": [
      "#include <iostream>",
      "",
      "auto main(int argc, const char *argv[]) -> int {",
      "  $0",
      "  return 0;",
      "}"
    ]
  },
  "function": {
    "prefix": "fn",
    "body": "auto ${1:FunctionName}(${2:/* params */}) -> ${3:void};"
  }
}
